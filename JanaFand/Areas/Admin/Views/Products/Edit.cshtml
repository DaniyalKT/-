@model DataLayer.Products
@using DataLayer;

@{
    ViewBag.Title = "ویرایش  محصول ";
    List<Product_Selected_Groups> selectedGroup = ViewBag.SelectedGroups;
}


<div class="row">
    @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        @Html.HiddenFor(m => m.ProductID)
        @Html.HiddenFor(m => m.ImageName)
        @Html.HiddenFor(m => m.CreateDate)

        <div class="col-md-8">
            @Html.AntiForgeryToken()

            @if (ViewBag.ErrorSelectedGroup == true)
            {
                <div class="alert alert-danger">
                    لطفا گروه محصول را انتخاب کنید
                </div>
            }


                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProductTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductTitle, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OldPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OldPrice, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        <span class="control-label col-md-2 ">کلمات کلیدی</span>
                        <div class="col-md-10">
                            <input type="text" name="tags" value="@ViewBag.Tags" placeholder="کلمات کلیدی را با , جدا کنید" class="form-control" />
                        </div>
                    </div>




                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="ویرایش محصول" class="btn btn-warning" />
                            <a class="btn btn-info" href="@Url.Action("Index")">
                                <i class="glyphicon glyphicon-arrow-left"></i>
                            </a>
                        </div>
                    </div>
                </div>
        </div>

        <div class="col-md-3">

            <div class="panel panel-primary">
                <div class="panel-heading">تصویر محصول</div>
                <div class="panel-body">
                    <img id="imgPreviewProduct" style="margin: 20px auto" src="~/Images/ProductImages/@Model.ImageName" class="img-thumbnail" />
                    <div class="form-group">
                        @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })

                        <input type="file" id="productImage" name="productImage" />
                        @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })\


                    </div>
                </div>
            </div>

            <div class="panel panel-primary">
                <div class="panel-heading">انتخاب  گروه</div>
                <div class="panel-body">
                    @{
                        List<Product_Groups> groups = ViewBag.Groups;

                        <ul>
                            @foreach (var group in groups.Where(g => g.ParentID == null))
                            {
                                <li>
                                    <input type="checkbox" name="SelectedGroup" @(selectedGroup.Any(g => g.GroupID == group.GroupID) ? "checked" : "") value="@group.GroupID" />  <span>@group.GroupTitle</span>

                                    @if (groups.Any(g => g.ParentID == group.GroupID))
                                    {
                                        <ul>
                                            @foreach (var subGroup in groups.Where(g => g.ParentID == group.GroupID))
                                            {
                                                <li>
                                                    <input type="checkbox" @(selectedGroup.Any(g => g.GroupID == subGroup.GroupID) ? "checked" : "") name="SelectedGroup" value="@subGroup.GroupID" />  <span>@subGroup.GroupTitle</span>
                                                </li>
                                            }

                                        </ul>
                                    }

                                </li>

                            }
                        </ul>
                    }
                </div>
            </div>

        </div>

    }
</div>


@section Scripts{
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgPreviewProduct').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]); // convert to base64 string
            }
        }

        $("#productImage").change(function () {
            readURL(this);
        });
    </script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="/ckeditor/ckeditor.js"></script>
    <script src="/ckeditor/adapters/jquery.js"></script>
    <script>
        $(function () {
            $('#Text').ckeditor();
        });
    </script>
}
